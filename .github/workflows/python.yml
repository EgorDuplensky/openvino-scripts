name: Python Code Quality Validation

on:
  issue_comment:
    types: [created, edited]
  # optional – lets you run it from the "Actions" tab while debugging
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write
  statuses: write

jobs:
  python-flake8:
    if: github.event.issue.pull_request &&
        (contains(github.event.comment.body, '/check-python-flake8') ||
         contains(github.event.comment.body, '/check-all'))
    runs-on: ubuntu-latest

    steps:
    - name: Get PR details
      id: pr
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pullRequest } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          return {
            ref: pullRequest.head.ref,
            sha: pullRequest.head.sha,
            repo_full_name: pullRequest.head.repo.full_name
          };
    
    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(steps.pr.outputs.result).repo_full_name }}
        ref: ${{ fromJson(steps.pr.outputs.result).ref }}
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install Python tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 autopep8
    
    - name: Run flake8 on all Python scripts
      id: flake8
      run: |
        echo "Running flake8 on all Python scripts..."
        if flake8; then
          echo "status=success" >> $GITHUB_OUTPUT
          echo "message=✅ All Python scripts passed flake8" >> $GITHUB_OUTPUT
        else
          echo "status=failure" >> $GITHUB_OUTPUT
          echo "message=❌ Some Python scripts failed flake8" >> $GITHUB_OUTPUT
          exit 1
        fi
    
    - name: Run autopep8 check on all Python scripts
      id: autopep8
      run: |
        echo "Running autopep8 check on all Python scripts..."
        if autopep8 -a -r --diff . | grep -q '^---\|^+++\|^@@'; then
          echo "status=failure" >> $GITHUB_OUTPUT
          echo "message=❌ Some Python scripts need autopep8 formatting" >> $GITHUB_OUTPUT
          echo "Autopep8 would make the following changes:"
          autopep8 -a -r --diff .
          exit 1
        else
          echo "status=success" >> $GITHUB_OUTPUT
          echo "message=✅ All Python scripts are properly formatted with autopep8" >> $GITHUB_OUTPUT
        fi
    
    - name: Update flake8 commit status
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const state = '${{ steps.flake8.outputs.status }}' === 'success' ? 'success' : 'failure';
          const description = '${{ steps.flake8.outputs.message }}';
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: '${{ fromJson(steps.pr.outputs.result).sha }}',
            state: state,
            target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            description: description,
            context: 'python-flake8/all-scripts'
          });
    
    - name: Update autopep8 commit status
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const state = '${{ steps.autopep8.outputs.status }}' === 'success' ? 'success' : 'failure';
          const description = '${{ steps.autopep8.outputs.message }}';
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: '${{ fromJson(steps.pr.outputs.result).sha }}',
            state: state,
            target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            description: description,
            context: 'python-autopep8/all-scripts'
          });

  python-autopep8:
    if: github.event.issue.pull_request &&
        (contains(github.event.comment.body, '/check-python-autopep8') ||
         contains(github.event.comment.body, '/check-all'))
    runs-on: ubuntu-latest

    steps:
    - name: Get PR details
      id: pr
      uses: actions/github-script@v7
      with:
        script: |
          const { data: pullRequest } = await github.rest.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });
          return {
            ref: pullRequest.head.ref,
            sha: pullRequest.head.sha,
            repo_full_name: pullRequest.head.repo.full_name
          };
    
    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        repository: ${{ fromJson(steps.pr.outputs.result).repo_full_name }}
        ref: ${{ fromJson(steps.pr.outputs.result).ref }}
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install autopep8
      run: |
        python -m pip install --upgrade pip
        pip install autopep8
    
    - name: Run autopep8 check on all Python scripts
      id: autopep8
      run: |
        echo "Running autopep8 check on all Python scripts..."
        if autopep8 -a -r --diff . | grep -q '^---\|^+++\|^@@'; then
          echo "status=failure" >> $GITHUB_OUTPUT
          echo "message=❌ Some Python scripts need autopep8 formatting" >> $GITHUB_OUTPUT
          echo "Autopep8 would make the following changes:"
          autopep8 -a -r --diff .
          exit 1
        else
          echo "status=success" >> $GITHUB_OUTPUT
          echo "message=✅ All Python scripts are properly formatted with autopep8" >> $GITHUB_OUTPUT
        fi
    
    - name: Update commit status
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const state = '${{ steps.autopep8.outputs.status }}' === 'success' ? 'success' : 'failure';
          const description = '${{ steps.autopep8.outputs.message }}';
          
          await github.rest.repos.createCommitStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            sha: '${{ fromJson(steps.pr.outputs.result).sha }}',
            state: state,
            target_url: `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
            description: description,
            context: 'python-autopep8/all-scripts'
          });
